# coding: utf-8

"""
    SkyBox API

    The SkyBox APIs allow our users to create, update, delete, and export information within the SkyBox platform. These APIs allow SkyBox to be extensible, giving you the flexibility to grow, develop, and integrate third-party tooling to help scale out your business. To begin using the SkyBox APIs, you will need to generate two unique tokens: an Application_Token and an API Token.  To request a unique Application_Token, click here (<a href='https://skybox.vividseats.com/application-sign-up'>https://skybox.vividseats.com/application-sign-up</a>) and refer to this <a href='https://skybox.zendesk.com/hc/en-us/articles/6769735238043-Getting-Started-with-Skybox-APIs'>Zendesk Article</a> for detailed instructions on getting started with SkyBox APIs.  To generate an API Token when logged in to SkyBox, click on the drop-down under 'Logged In As:', select 'External Accounts', and then select 'API Invitation +'. A modal will appear and you will be prompted to enter the email address to which you want the token sent as well as to provide a brief description of the account.  Once you have both your Application_Token and API Token, there are two ways in which you can make requests: through the UI and through a third party. See below for detailed steps for each process.  Requests through the UI:  To begin, enter your Account ID in the X-Account field. Once complete, select _Authorize_. Next, enter your API Token in the X-Api-Token field. If you do not currently have an API Token, please follow the steps above to request one. Once complete, select _Authorize_. Last, enter your Application_Token in the X-Application-Token field. If you do not have an Application_Token, a sample is provided or you can follow the link above to request one. Once complete, select _Authorize_.  Requests through a third party (i.e. Postman):  The same information is required as it is through the UI, but it will be passed in through headers. It should look something like this:  X-Account: Account ID goes here!  X-Api-Token: API Token goes here!  X-Application-Token: Application_Token goes here!  Once these three items are successfully passed in as headers, you will be able to make sample requests.  <h2><a href='https://skybox.zendesk.com/hc/en-us/articles/5999881334427-SkyBox-API-Rate-Limits'>API Rate Limits</a> </h2>  A rate limit consists of two variables: an interval and a limit. An interval is a period of time, measured in seconds. A limit is the number of calls that can be made to an endpoint in an interval.  For example, SkyBox’s ‘GET /reports/‘ endpoint has an interval of 1 second and a limit of 1 call per interval. This means that this endpoint has a rate limit of 1 call/second.  Each endpoint, and its respective rate limit, is displayed in this <a href='https://skybox.zendesk.com/hc/en-us/articles/5999881334427-SkyBox-API-Rate-Limits'>Support Article</a>. If the endpoint is not listed, its rate limit is the default, indicated by the ‘*’ at the bottom of the table. 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from skybox_openapi_client.api.invoices_api import InvoicesApi


class TestInvoicesApi(unittest.TestCase):
    """InvoicesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = InvoicesApi()

    def tearDown(self) -> None:
        pass

    def test_invoices_bulk_remove_tags(self) -> None:
        """Test case for invoices_bulk_remove_tags

        """
        pass

    def test_invoices_delete(self) -> None:
        """Test case for invoices_delete

        """
        pass

    def test_invoices_delete_invoice_line(self) -> None:
        """Test case for invoices_delete_invoice_line

        """
        pass

    def test_invoices_get_assets(self) -> None:
        """Test case for invoices_get_assets

        """
        pass

    def test_invoices_get_invoice_by_id(self) -> None:
        """Test case for invoices_get_invoice_by_id

        """
        pass

    def test_invoices_get_invoice_line(self) -> None:
        """Test case for invoices_get_invoice_line

        """
        pass

    def test_invoices_get_invoice_line_tickets(self) -> None:
        """Test case for invoices_get_invoice_line_tickets

        """
        pass

    def test_invoices_get_invoice_lines(self) -> None:
        """Test case for invoices_get_invoice_lines

        """
        pass

    def test_invoices_get_invoice_tickets_by_external_ref_v2(self) -> None:
        """Test case for invoices_get_invoice_tickets_by_external_ref_v2

        """
        pass

    def test_invoices_get_transaction_history(self) -> None:
        """Test case for invoices_get_transaction_history

        """
        pass

    def test_invoices_insert_invoice(self) -> None:
        """Test case for invoices_insert_invoice

        """
        pass

    def test_invoices_insert_invoice_line(self) -> None:
        """Test case for invoices_insert_invoice_line

        """
        pass

    def test_invoices_print(self) -> None:
        """Test case for invoices_print

        """
        pass

    def test_invoices_print_custom_auth_form(self) -> None:
        """Test case for invoices_print_custom_auth_form

        """
        pass

    def test_invoices_process_payment(self) -> None:
        """Test case for invoices_process_payment

        """
        pass

    def test_invoices_process_refund(self) -> None:
        """Test case for invoices_process_refund

        """
        pass

    def test_invoices_remove_tag(self) -> None:
        """Test case for invoices_remove_tag

        """
        pass

    def test_invoices_search(self) -> None:
        """Test case for invoices_search

        """
        pass

    def test_invoices_send(self) -> None:
        """Test case for invoices_send

        """
        pass

    def test_invoices_tag(self) -> None:
        """Test case for invoices_tag

        """
        pass

    def test_invoices_update(self) -> None:
        """Test case for invoices_update

        """
        pass

    def test_invoices_update_currency(self) -> None:
        """Test case for invoices_update_currency

        """
        pass

    def test_invoices_update_invoice(self) -> None:
        """Test case for invoices_update_invoice

        """
        pass

    def test_invoices_update_invoice_line(self) -> None:
        """Test case for invoices_update_invoice_line

        """
        pass


if __name__ == '__main__':
    unittest.main()
